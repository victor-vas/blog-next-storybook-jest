// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PostTemplate /> should match snapshot 1`] = `
.c29 {
  padding: 0 3.2rem;
}

.c26 {
  font-size: 1.6rem;
  color: #AAAAAA;
  font-style: italic;
}

.c26 .categories span::after {
  content: ', ';
}

.c26 .categories span:last-child::after {
  content: '';
}

.c26 a {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c26 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c11 {
  color: #000000;
  line-height: 1.2;
  font-size: 2.4rem;
  text-transform: uppercase;
}

.c17 {
  color: #000000;
  line-height: 1.2;
  font-size: 2.4rem;
  text-transform: none;
}

.c23 {
  color: #000000;
  line-height: 1.2;
  font-size: 6.4rem;
  text-transform: none;
}

.c22 {
  padding-bottom: 4.0rem;
  margin-bottom: 4.0rem;
  border-bottom: 0.1rem solid #DDDDDD;
}

.c22 .c10 {
  margin: 0;
  margin-bottom: 2.4rem;
}

.c24 {
  margin: 2.4rem 0;
  font-size: 2.4rem;
}

.c25 {
  max-width: 100%;
  display: block;
  margin-bottom: 2.4rem;
}

.c28 {
  font-size: calc(1.6rem + 0.2rem);
  line-height: 1.5;
}

.c28 p {
  margin: 2.4rem 0;
}

.c28 a,
.c28 a:visited,
.c28 a:link {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c28 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c28 code {
  font-family: monospace;
  color: #dc143c;
  font-size: 1.6rem;
  background: #DDDDDD;
  padding: 0.2rem;
  margin: 0.2rem;
}

.c28 pre {
  background: #000000;
  padding: 2.4rem;
  font-family: monospace;
  color: #FFFFFF;
  margin: 2.4rem 0;
  width: 100%;
  overflow-x: auto;
  font-size: 1.6rem;
}

.c28 pre code {
  color: inherit;
  background: inherit;
}

.c28 img {
  max-width: 100%;
}

.c28 .image {
  background: #DDDDDD;
  line-height: 0;
  margin: 2.4rem 0;
}

.c28 .image figcaption {
  font-size: 1.6rem;
  padding: 1.6rem;
  text-align: center;
  line-height: 1.3;
}

.c28 .image-style-side {
  max-width: 50%;
  float: right;
  margin: 2.4rem 0;
}

.c28 hr {
  border: none;
  border-bottom: 0.1rem solid #DDDDDD;
}

.c28 ul,
.c28 ol {
  margin: 2.4rem 4.0rem;
}

.c28 .table {
  width: 100%;
  overflow: hidden;
  overflow-x: auto;
}

.c28 table {
  width: 100%;
  border-collapse: collapse;
  margin: 2.4rem 0;
}

.c28 table td,
.c28 table th {
  padding: 1.6rem;
  border: 0.1rem solid #DDDDDD;
}

.c28 blockquote {
  border-left: 0.5rem solid #dc143c;
  color: #AAAAAA;
  -webkit-filter: brightness(80%);
  filter: brightness(80%);
  padding-left: 2.4rem;
  font-style: italic;
  margin: 2.4rem;
}

.c21 {
  width: 100%;
  margin: 0 auto;
  padding: 0 3.2rem;
  max-width: 96rem;
}

.c27 {
  width: 100%;
  margin: 0 auto;
  padding: 0 3.2rem;
  max-width: 80rem;
}

.c30 {
  margin: 2.4rem 0;
}

.c30 span {
  margin: 0 0 0 0.5rem;
}

.c30 span::before {
  content: ' ';
}

.c30 span::after {
  content: ', ';
}

.c30 span:last-child::after {
  content: '';
}

.c30 a {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c30 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c32 {
  text-align: center;
  border-top: 0.1rem solid #DDDDDD;
}

.c32 a {
  color: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c33 {
  position: fixed;
  background: #000000;
  color: #FFFFFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 4rem;
  height: 4rem;
  bottom: 2rem;
  right: 2rem;
  z-index: 6;
}

.c6 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c12 > img {
  width: 15rem;
  height: 15rem;
  border-radius: 50%;
}

.c15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding-bottom: 6.4rem;
  width: 100%;
  max-width: 96rem;
  color: #333333;
  font-size: 1.6rem;
  margin: 0 auto;
}

.c15 .c10 {
  margin: 0 0 calc(1.6rem - 1rem);
}

.c16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column wrap;
  -ms-flex-flow: column wrap;
  flex-flow: column wrap;
  margin-left: 3.2rem;
  max-width: 48rem;
}

.c13 {
  display: block;
  color: #FFFFFF;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin-bottom: 1.6rem;
  font-size: 1.8rem;
  border-right: 0.5rem solid #000000;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c13:hover {
  border-right: 0.5rem solid #dc143c;
  color: #dc143c;
}

.c7 {
  background: #000000;
  padding: 3.2rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  z-index: 1;
  width: 100%;
  max-width: 32rem;
  height: 100vh;
  top: 0;
  left: 0;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  overflow-y: auto;
  left: -30rem;
  overflow-y: hidden;
}

.c8 {
  margin: auto;
  width: 100%;
}

.c9 .c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  margin-bottom: 4.8rem;
}

.c9 .c10 img {
  border: 0.5rem solid #dc143c;
}

.c5 {
  position: fixed;
  top: 2.4rem;
  color: #FFFFFF;
  background: #000000;
  z-index: 2;
  width: 3rem;
  height: 3rem;
  left: 26rem;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  left: 1rem;
  color: #FFFFFF;
}

.c0 {
  position: fixed;
  top: 2rem;
  right: 2rem;
  z-index: 2;
}

.c1 {
  position: relative;
  display: inline-block;
  width: 5rem;
  height: 2.5rem;
  line-height: 0;
  font-size: 0;
  overflow: hidden;
  color: rgba(0,0,0,0);
}

.c2 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  opacity: 0;
  width: 0;
  height: 0;
}

.c2:checked + .c3 {
  background: #dc143c;
}

.c2:focus + .c3 {
  box-shadow: 0 0 1px #dc143c;
}

.c2:checked + .c3:before {
  -webkit-transform: translateX(1.9rem);
  -ms-transform: translateX(1.9rem);
  transform: translateX(1.9rem);
  background: #000000;
}

.c4 {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #DDDDDD;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  border-radius: 2rem;
  box-shadow: 0 0 1px #000000;
}

.c4:before {
  content: '';
  position: absolute;
  height: 2.1rem;
  width: 2.1rem;
  left: 0.4rem;
  bottom: 0.2rem;
  background: #333333;
  border-radius: 50%;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c14 {
  margin-top: 6.4rem;
  padding: 0 3.2rem;
}

.c18 {
  margin: 0 auto;
  margin-bottom: 4.0rem;
  padding: 0 3.2rem;
  max-width: 120rem;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c19 {
  padding: 0.5rem 1.6rem;
}

.c20 {
  max-width: 120rem;
  width: 100%;
  margin: 0 auto;
  margin-bottom: 6.4rem;
}

.c31 {
  max-width: 120rem;
  width: 100%;
  margin: 0 auto;
  padding: 3.2rem;
}

@media (max-width:768px) {
  .c23 {
    font-size: 4.0rem;
  }
}

@media (max-width:768px) {
  .c28 {
    font-size: 2rem;
  }

  .c28 .image-style-side {
    max-width: 100%;
    float: none;
    margin: 0;
  }
}

@media (max-width:360px) {
  .c15 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-flow: column wrap;
    -ms-flex-flow: column wrap;
    flex-flow: column wrap;
  }

  .c15 > .c10 {
    margin: 0 0 2.4rem 0;
  }
}

@media (max-width:360px) {
  .c16 {
    margin-left: 0;
  }
}

@media (max-width:768px) {
  .c7 {
    left: -32rem;
  }
}

@media (max-width:768px) {
  .c5 {
    left: 0;
  }
}

<div>
  <div
    class=""
  >
    <div
      class="c0"
    >
      <label
        class="c1"
      >
        Toggle light and dark modes
        <input
          class="c2"
          type="checkbox"
          value="Dark mode active"
        />
        <span
          class="c3 c4"
        />
      </label>
    </div>
    <a
      aria-label="Open or close menu"
      class="c5"
      href="#"
      title="Open or close menu"
    >
      <svg
        aria-hidden="true"
        aria-label="Open menu"
        class="c6"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 0h24v24H0V0z"
          fill="none"
        />
        <path
          d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
        />
      </svg>
    </a>
    <div
      aria-hidden="true"
      class="c7"
    >
      <nav
        class="c8"
      >
        <div
          class="c9"
        >
          <h1
            class="c10 c11"
          >
            <a
              class="c12"
              href="/"
              target="_self"
            >
              <img
                alt="Victor Vasconcelos"
                src="https://res.cloudinary.com/dg4rnkej8/image/upload/v1618695788/victor_mvonwx.jpg"
              />
            </a>
          </h1>
        </div>
        <a
          class="c13"
          href="http://localhost:3000/#home"
          target="_self"
        >
          Home
        </a>
      </nav>
    </div>
    <div
      class="c14"
    >
      <header
        class="c15"
      >
        <h1
          class="c10 c11"
        >
          <a
            class="c12"
            href="/"
            target="_self"
          >
            <img
              alt="Victor Vasconcelos - Blog de Victor Vasconcelos"
              src="https://res.cloudinary.com/dg4rnkej8/image/upload/v1618695788/victor_mvonwx.jpg"
            />
          </a>
        </h1>
        <div
          class="c16"
        >
          <h2
            class="c10 c17"
          >
            Victor Vasconcelos
          </h2>
          <p>
            Blog de Victor Vasconcelos
          </p>
        </div>
      </header>
    </div>
    <div
      class="c18"
    >
      <form
        action="/search/"
        method="GET"
      >
        <input
          class="c19"
          name="q"
          placeholder="Encontre posts"
          type="search"
          value=""
        />
      </form>
    </div>
    <div
      class="c20"
    >
      <article
        class=""
      >
        <div
          class="c21"
        >
          <header
            class="c22"
          >
            <h1
              class="c10 c23"
            >
              React Hooks useState
            </h1>
            <p
              class="c24"
            >
              Hooks são uma nova adição ao React 16.8. Eles permitem que você use o state e outros recursos do React sem escrever uma classe.
            </p>
            <img
              alt="React Hooks useState"
              class="c25"
              src="https://res.cloudinary.com/dg4rnkej8/image/upload/v1616526348/1_v_HH_Bwc_UF_Ua_HW_Xnt_Snq_Kd_CA_c923d6cb48.png"
            />
            <div
              class="c26"
            >
              <p>
                <span>
                  Por 
                </span>
                <a
                  href="/author/victor"
                >
                  Victor
                </a>
                <span
                  class="separator"
                >
                   | 
                </span>
                <time
                  datetime="2020-04-20"
                >
                  19 de abr. de 2020
                </time>
                <span
                  class="separator"
                >
                   | 
                </span>
                <span
                  class="categories"
                >
                  <span>
                    <a
                      href="/category/react"
                    >
                      React
                    </a>
                  </span>
                </span>
              </p>
            </div>
          </header>
        </div>
        <div
          class="c27"
        >
          <div
            class="c28"
          >
            <p>
              <span
                style="color:rgb(0,0,0);"
              >
                A 
              </span>
              <a
                href="https://pt-br.reactjs.org/docs/hooks-intro.html"
              >
                página de introdução
              </a>
              <span
                style="color:rgb(0,0,0);"
              >
                 usou este exemplo para familiarizar com Hooks:
              </span>
            </p>
            <pre>
              <code
                class="language-plaintext"
              >
                import React, { useState } from 'react';

function Example() {
  // Declarar uma nova variável de state, na qual chamaremos de "count"  const [count, setCount] = useState(0);
  return (
    &lt;div&gt;
      &lt;p&gt;You clicked {count} times&lt;/p&gt;
      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;
        Click me
      &lt;/button&gt;
    &lt;/div&gt;
  );
}
              </code>
            </pre>
            <p
              style="margin-left:0px;"
            >
              Vamos começar a aprender sobre Hooks comparando este código com um exemplo equivalente utilizando classe.
            </p>
            <h2
              style="margin-left:0px;"
            >
              Exemplo Equivalente com Classe
            </h2>
            <p
              style="margin-left:0px;"
            >
              Se você já usou classes no React, este código deve parecer familiar:
            </p>
            <pre>
              <code
                class="language-plaintext"
              >
                class Example extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      count: 0
    };
  }

  render() {
    return (
      &lt;div&gt;
        &lt;p&gt;You clicked {this.state.count} times&lt;/p&gt;
        &lt;button onClick={() =&gt; this.setState({ count: this.state.count + 1 })}&gt;
          Click me
        &lt;/button&gt;
      &lt;/div&gt;
    );
  }
}
              </code>
            </pre>
            <p
              style="margin-left:0px;"
            >
              O state começa como 
              <code>
                { count: 0 }
              </code>
              , e aumentamos o 
              <code>
                state.count
              </code>
               chamando 
              <code>
                this.setState()
              </code>
               quando o usuário clica no botão. Vamos utilizar trechos dessa classe ao longo da página.
            </p>
            <blockquote>
              <p
                style="margin-left:0px;"
              >
                <strong>
                  Nota
                </strong>
              </p>
              <p
                style="margin-left:0px;"
              >
                Você pode estar se perguntando porque estamos usando um counter aqui ao invés de um exemplo mais realista. Isto é pra nos ajudar a focar na API enquanto ainda damos os primeiros passos com Hooks.
              </p>
            </blockquote>
          </div>
        </div>
      </article>
      <div
        class="c29"
      >
        <p
          class="c30"
        >
          tags:
          <span>
            <a
              href="/tag/use-state"
            >
              useState
            </a>
          </span>
          <span>
            <a
              href="/tag/use-effect"
            >
              useEffect
            </a>
          </span>
        </p>
      </div>
    </div>
    <div
      class="c31"
    >
      <footer
        class="c32"
      >
        <div
          class="c28"
        >
          <p>
            Blog criado por Victor Vasconcelos.
          </p>
        </div>
      </footer>
    </div>
    <a
      aria-label="Go to top"
      class="c33"
      href="#"
      title="Go to top"
    >
      <svg
        aria-hidden="true"
        class="c6"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 0h24v24H0V0z"
          fill="none"
        />
        <path
          d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6 1.41 1.41z"
        />
      </svg>
    </a>
  </div>
</div>
`;
